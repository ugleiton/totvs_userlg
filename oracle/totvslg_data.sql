CREATE OR REPLACE FUNCTION TOTVSLG_DATA(USERLG IN CHAR) RETURN DATE 
AS 
DATA_RETORNO DATE;
BEGIN

  IF(USERLG<>'     ') THEN
    DATA_RETORNO := TO_DATE('19960101','yyyymmdd')+((ASCII(SUBSTR(USERLG,12,1)) - 50) * 100 + (ASCII(SUBSTR(USERLG,16,1)) - 50));
  ELSE
    DATA_RETORNO := NULL;
  END IF;
  RETURN DATA_RETORNO;
END TOTVSLG_DATA;


CREATE OR REPLACE FUNCTION TOTVSPRD.TOTVSLG_DATATIME(USERLG IN CHAR,P_ROWSCN IN NUMBER, USERLGI IN CHAR := '     ') RETURN TIMESTAMP 
AS 
DATA_RETORNO TIMESTAMP;
TOTVSLG CHAR(20);
BEGIN
  IF USERLG = '     ' THEN
	  TOTVSLG := USERLGI;
  ELSE
	  TOTVSLG := USERLG;
  END IF;
  IF (P_ROWSCN IS NULL) THEN
	 DATA_RETORNO := TO_TIMESTAMP(TO_CHAR(TO_DATE('19960101','yyyymmdd')+((ASCII(SUBSTR(TOTVSLG,12,1)) - 50) * 100 + (ASCII(SUBSTR(TOTVSLG,16,1)) - 50)), 'yyyymmdd')||' 00:00:00','yyyymmdd HH24:MI:SS');
  ELSE
  	BEGIN
	  DATA_RETORNO := SCN_TO_TIMESTAMP(P_ROWSCN);
	EXCEPTION  -- exception handlers begin
	  WHEN OTHERS THEN  -- handles all other errors
    	DATA_RETORNO := TO_TIMESTAMP(TO_CHAR(TO_DATE('19960101','yyyymmdd')+((ASCII(SUBSTR(TOTVSLG,12,1)) - 50) * 100 + (ASCII(SUBSTR(TOTVSLG,16,1)) - 50)), 'yyyymmdd')||' 00:00:00','yyyymmdd HH24:MI:SS');
	END; 
  END IF;
  RETURN DATA_RETORNO;
END TOTVSLG_DATATIME;
